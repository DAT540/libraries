include "global.tbh"



sub boot()
    
    'Setting Library Initialization
    '================================================================
    dim stg_init_code as en_stg_status_codes
    dim stg_name as string(STG_MAX_SETTING_NAME_LEN)
    if stg_start()<>EN_STG_STATUS_OK then 
        pat.play("R-R-~",PL_PAT_CANINT)
        sys.debugprint("stg_start failed")
        sys.halt
    end if
    stg_init_code=stg_check_all(stg_name)
    select case stg_init_code
    case EN_STG_STATUS_OK:
    '--- all good ---
    case EN_STG_STATUS_INVALID, EN_STG_STATUS_FAILURE:
        if stg_restore_multiple(EN_STG_INIT_MODE_NORMAL)<>EN_STG_STATUS_OK then 
            pat.play("R-R-~",PL_PAT_CANINT)
            sys.debugprint("stg_restore_multiple failed")
            sys.halt
        end if
    case else:
        'some other trouble
        pat.play("R-R-~",PL_PAT_CANINT)
        sys.debugprint("stg_check_all failed")
        sys.halt
    end select
    '-----------------------------------------------------------------
stg1=stg_get("stg1",0)

    device_net_ip = "192.168.1.130"
    device_net_mask = "255.255.255.0"
    device_net_gateway = "192.168.1.1"
    'Ethernet setup
    '================================================================
    net.ip=device_net_ip
    net.netmask=device_net_mask
    net.gatewayip=device_net_gateway
    '-----------------------------------------------------------------
current_interface = PL_SOCK_INTERFACE_NULL
    dim f as byte
    for f=0 to MAX_NUM_INTERFACES-1
        interface_ready(f)=NO
    next f

    'enable the control lines (notice that the use of the RST line is not really necessary)   
    io.num=PL_IO_NUM_46
    io.enabled=YES
    io.state=LOW
    io.state=HIGH
    io.num=PL_IO_NUM_47
    io.enabled=YES
    io.num=PL_IO_NUM_48
    io.enabled=YES

    
    'make 5 clocks
    io.num=PL_IO_NUM_47
    for f=0 to 4
        io.lineset(PL_IO_NUM_48,1)
        io.state=LOW
        io.state=HIGH
    next f
    
    

    beep.divider = 11111

    'HTTP server setup
    '================================================================
    dim http_server_count as byte
    for http_server_count=0 to 3 'allocate sockets for the webserver
        sock.num=sock_get("W" + str(http_server_count))
        sock.connectiontout=120
        sock.txbuffrq(10)
        sock.varbuffrq(1)
        sys.buffalloc()
        sock.redir(PL_REDIR_SOCK0 + sock.num)
        
        sock.protocol=PL_SOCK_PROTOCOL_TCP
        sock.httpportlist="80"
        sock.allowedinterfaces="NET,WLN"
        sock.inconmode=PL_SOCK_INCONMODE_ANY_IP_ANY_PORT
    next http_server_count
    'visit the device ip on a browser to see index.html being served
    '-----------------------------------------------------------------

    'SNTP setup
    '================================================================
    SNTP_socket=sock_get("NTP")
    sntp_init()
    '-----------------------------------------------------------------

    'Fd(flash disk) setup
    '================================================================
    if fd.mount<>PL_FD_STATUS_OK then
        if fd.formatj(fd.availableflashspace/2,32,100)<>PL_FD_STATUS_OK then
            sys.debugprint("fd.formatj failed")
            sys.halt
        end if
    
        if fd.mount<>PL_FD_STATUS_OK then
            sys.debugprint("fd.mount failed")
            sys.halt
        end if
    end if
    '-----------------------------------------------------------------
	var_poll_timer = 1000

    'Tables setup
    '================================================================
    if tbl_start()<>EN_TBL_STATUS_OK then
        sys.debugprint("TBL> Failed to start")
        sys.halt
    end if
    '-----------------------------------------------------------------

    tbl_web_start()
    dim schema_changed as boolean = false
    tbl_web_set("T1",true)



    if tbl_schema_check(TBL_DESCRIPTOR_FILE)<>EN_TBL_STATUS_OK then
        schema_changed = YES
    end if

    if schema_changed= YES then
        sys.debugprint("TBL> Schema changed, formatting flash")
        if fd.formatj(fd.availableflashspace/2,32,100)<>PL_FD_STATUS_OK then
            sys.debugprint("TBL> Failed to format flash")
            sys.halt
        end if
        if tbl_start()<>EN_TBL_STATUS_OK then
            sys.debugprint("TBL> Failed to start")
            sys.halt
        end if
        if tbl_schema_check(TBL_DESCRIPTOR_FILE)<>EN_TBL_STATUS_OK then
            sys.debugprint("TBL> Failed to check schema")
            sys.halt
        end if
    end if

    
    ' Set the timezone to UTC+08:00
    APP_TIMEZONE="27"
    datetime_tz_offset=APP_TIMEZONE

    if net.linkstate<>PL_NET_LINKSTAT_NOLINK then
        interface_set(PL_SOCK_INTERFACE_NET,YES)
    end if

' Set the timezone to UTC+08:00
APP_TIMEZONE="27"

    pat.play("B-B-B-",PL_PAT_CANINT)

            var_var1_set(0.0)

end sub