include "global.tbh"

#define DT_SECS_IN_DAY 86400

const datetime_seconds_since_epoch = 946684800
dim datetime_tz_offset as string(2) 'Time Zone Off Set, You will need to change this according to your time zone
dim datetime_convert_err as ok_ng
dim datetime_format_err as ok_ng


function datetime_to_timestamp(days as word, mins as word, secs as byte) as dword
	datetime_to_timestamp = datetime_seconds_since_epoch
	datetime_to_timestamp = datetime_to_timestamp + (days * DT_SECS_IN_DAY) + (mins * 60) + secs
end function

function datetime_current_timestamp() as dword
	dim datetime_days,datetime_minutes as word
	dim datetime_secs as byte
	rtc.getdata(datetime_days,datetime_minutes,datetime_secs)
	datetime_current_timestamp = datetime_seconds_since_epoch
	datetime_current_timestamp = datetime_current_timestamp + (datetime_days * DT_SECS_IN_DAY) + (datetime_minutes * 60) + datetime_secs
end function

sub datetime_from_timestamp(timestamp as dword, byref days as word, byref mins as word, byref secs as byte)
	dim remainder as dword
	days = 0
	mins = 0
	secs = 0
	timestamp = timestamp - datetime_seconds_since_epoch
	remainder = timestamp MOD DT_SECS_IN_DAY
	days = (timestamp - remainder) / DT_SECS_IN_DAY
	timestamp = remainder
	remainder = timestamp MOD 60
	mins = (timestamp - remainder) / 60
	secs = remainder
end sub

sub datetime_time_to_str(byref ts_str as string(14),	
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte)
	dim time_year_str, time_month_str, time_date_str, time_hour_str, time_minute_str, time_second_str as string(4)

	time_year_str=str(year(time_daycount)+2000)
	time_month_str=str(month(time_daycount))
	time_date_str=str(date(time_daycount))
	time_hour_str=str(hours(time_mincount))
	time_minute_str=str(minutes(time_mincount))
	time_second_str=str(time_second_byte)

	if len(time_hour_str) < 2 then 
		time_hour_str="0"+time_hour_str 
	end if
	if len(time_minute_str) < 2 then 
		time_minute_str="0"+time_minute_str 
	end if
	if len(time_second_str) < 2 then 
		time_second_str="0"+time_second_str 
	end if
	if len(time_date_str) < 2 then 
		time_date_str="0"+time_date_str 
	end if
	if len(time_month_str) < 2 then 
		time_month_str="0"+time_month_str 
	end if
	ts_str=time_year_str+time_month_str+time_date_str+time_hour_str+time_minute_str+time_second_str
end sub

sub datetime_string_format(byref result as string(14), 
	byref format as string(14),
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte)
	datetime_time_to_str(result, time_daycount, time_mincount, time_second_byte)
	'YYYYMMDDhhmmss
	select case format
		case "YYYYMMDD":
			result=mid(result,1,8)
		case "YYYYMMDDhhmm":
			result=mid(result,1,12)
		case "YYYYMMDDhhmmss":
			result=result
		case "hhmmss":
			result=mid(result,9,6)
		case "hhmm":
			result=mid(result,9,4)
	end select
end sub

sub datetime_time_to_bytestr(
	byref ts_str as string(14),	
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte
	)
	ts_str=chr(time_daycount/256)
	ts_str=ts_str+chr(time_daycount and &hFF)
	ts_str=ts_str+chr(time_mincount/256)
	ts_str=ts_str+chr(time_mincount and &hFF)
	ts_str=ts_str+chr(time_second_byte)				
end sub

'------------------------------------------------------------------------------
sub datetime_bytestr_to_time(
	byref ts_str as string(14),	
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte
	)
	time_daycount=256*asc(mid(ts_str,1,1))+asc(mid(ts_str,2,1))
	time_mincount=256*asc(mid(ts_str,3,1))+asc(mid(ts_str,4,1))
	time_second_byte=asc(mid(ts_str,5,1))
end sub

sub datetime_str_to_time(byref ts_str as string(14),	
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte)
	dim time_year, time_month,time_date,time_hour,time_min as byte
	dim time_year_str, time_month_str, time_date_str, time_hour_str, time_minute_str, time_second_str as string(4)
	
	time_year_str=left(ts_str,4)
	time_month_str=mid(ts_str,5,2)
	time_date_str=mid(ts_str,7,2)
	time_hour_str=mid(ts_str,9,2)
	time_minute_str=mid(ts_str,11,2)
	time_second_str=mid(ts_str,13,2)
	time_year=val(time_year_str)-2000
	time_month=val(time_month_str)
	time_date=val(time_date_str)
	time_daycount=daycount(time_year,time_month,time_date)
	if time_daycount=65535 then 
		datetime_convert_err=NG
		exit sub
	end if
	time_hour=val(time_hour_str)
	time_min=val(time_minute_str)
	time_mincount=mincount(time_hour,time_min)
	if time_mincount=65535 then
		datetime_convert_err=NG
		exit sub
	end if	
	time_second_byte=val(time_second_str)
	if time_second_byte>59 then datetime_convert_err=NG
end sub

sub datetime_type_convert(
	byref ts_str as string(14),	
	byref time_daycount as word,
	byref time_mincount as word,
	byref time_second_byte as byte, 
	convert_dir as datetime_convert_dir	
	)
'Convert time format, between string(YYYYMMDDhhmmss), and values(daycount, mincout and sec), and value string(values in a 5 bytes asciix string)
'Ex. BYTESTR_TO_TIME: user have to supply Daycount, MinCount, and second, the function returns 5 bytes time value (2bytes of daycounts, 2bytes of mincounts, and 1byte of second in ts_str.)
'TIME_TO_BYTESTR: reverse of BYTESTR_TO_TIME
'STR_TO_TIME: convert a time string in ts_str, to daycounts, mincounts and seconds
'TIME_TO_STR: reverse of STR_TIME
	datetime_convert_err=OK
	select case convert_dir
	case TIME_TO_STR:
		if time_daycount>36524 or time_mincount>1439 or time_second_byte>59 then
			datetime_convert_err=NG
			exit sub
		end if
		datetime_time_to_str(ts_str,time_daycount,time_mincount,time_second_byte)
	case STR_TO_TIME:
		datetime_str_to_time(ts_str,time_daycount,time_mincount,time_second_byte)
	case TIME_TO_BYTESTR:
		if time_daycount>36524 or time_mincount>1439 or time_second_byte>59 then
			datetime_convert_err=NG
			exit sub
		end if	
		datetime_time_to_bytestr(ts_str,time_daycount,time_mincount,time_second_byte)
	case BYTESTR_TO_TIME:
		datetime_bytestr_to_time(ts_str,time_daycount,time_mincount,time_second_byte)
	case STR_TO_BYTESTR:
		datetime_str_to_time(ts_str,time_daycount,time_mincount,time_second_byte)
		if datetime_convert_err=NG then exit sub
		datetime_time_to_bytestr(ts_str,time_daycount,time_mincount,time_second_byte)
	case BYTESTR_TO_STR:
		datetime_bytestr_to_time(ts_str,time_daycount,time_mincount,time_second_byte)
		if time_daycount>36524 or time_mincount>1439 or time_second_byte>59 then
			datetime_convert_err=NG
			exit sub
		end if		
		datetime_time_to_str(ts_str,time_daycount,time_mincount,time_second_byte)
	end select
end sub
